const grpc = require("@grpc/grpc-js");
const protoLoader  = require("@grpc/proto-loader");
const path = require("path");

// –ó–∞–≥—Ä—É–∂–∞–µ–º proto-—Ñ–∞–π–ª
const PROTO_PATH = path.join(process.cwd(), "./proto/discovery-api.proto");
const packageDefinition = protoLoader.loadSync(PROTO_PATH, {
  keepCase: true,
  longs: String,
  enums: String,
  defaults: true,
  oneofs: true,
});

const proto = grpc.loadPackageDefinition(packageDefinition).interrogator.api.v1;

// –†–µ–∞–ª–∏–∑–∞—Ü–∏—è DiscoveryService
const discoveryService = {
  ListBdiModules: (call, callback) => {
    callback(null, {
      modules: [
        { module_id: 1, description: "–ë–î–ò ‚Ññ1", address: "192.168.1.10:5000" },
        { module_id: 2, description: "–ë–î–ò ‚Ññ2", address: "192.168.1.11:5000" },
      ],
    });
  },

  ListDrivers: (call, callback) => {
    callback(null, {
      drivers: [
        { driver_id: 1, description: "–õ–∞–∑–µ—Ä–Ω—ã–π –¥—Ä–∞–π–≤–µ—Ä 1", address: "192.168.1.20:5001" },
        { driver_id: 2, description: "–õ–∞–∑–µ—Ä–Ω—ã–π –¥—Ä–∞–π–≤–µ—Ä 2", address: "192.168.1.21:5001" },
      ],
    });
  },

  ListTestSources: (call, callback) => {
    callback(null, {
      sources: [
        { source_id: 1, description: "–¢–µ—Å—Ç–æ–≤—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ 1", address: "192.168.1.30:5002" },
        { source_id: 2, description: "–¢–µ—Å—Ç–æ–≤—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ 2", address: "192.168.1.31:5002" },
      ],
    });
  },
};

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
function main() {
  const server = new grpc.Server();
  server.addService(proto.DiscoveryService.service, discoveryService);

  const address = "0.0.0.0:50051";
  server.bindAsync(address, grpc.ServerCredentials.createInsecure(), (err, port) => {
    if (err) {
      console.error("–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:", err);
      return;
    }
    console.log(`üöÄ gRPC DiscoveryService –∑–∞–ø—É—â–µ–Ω –Ω–∞ ${address}`);
    server.start();
  });
}

main();
